.TH OCD-UNDEPLOY "1" "May 2025" "ocd 0.8.0" "User Commands"
.SH NAME
ocd-undeploy - undeploy target entries in cluster
.SH SYNOPSIS
ocd undeploy [options] [target]...
.SH DESCRIPTION
Undeploy selected cluster entries from their working directory targets. Any
dependencies will also be undeployed by default. Defined node entries that do
not exist in the repository store will automatically be cloned through their
\fBurl\fR target.
.sp
Undeployment of normal entries, i.e., not bare-alias, will cause this command to
only check if they have been cloned into the repository store, and skip them.
Normal entries cannot be deployed, because they do not have alias working trees
to deploy in the first place.
.sp
Finally, the undeployment of root will also be skipped, because root cannot be
undeployed.
.SH OPTIONS
.PP
\-o, \-\-only
.RS 4
Do not undeploy dependencies of targets.
.RE
.sp
.PP
\-e, \-\-excluded-only
.RS 4
Undeploy excluded files only.
.RE
.sp
.PP
\-h, \-\-help
.RS 4
Print help message for this command.
.RE
.sp
.PP
[target]...
.RS 4
List of comma separated cluster entry names to undeploy.
.sp
User can use glob matching patterns to select targets. See
<https://docs.rs/glob/latest/glob/struct.Pattern.html> for listing of accepted
patterns. Be sure to quote targets to avoid the shell from expanding them.
.RE
.sp
.SH EXAMPLES
Assume that root, bash, and polyglot_ps1 have been defined as entries of
the cluster such that polyglot_ps1 is a dependency of bash. Thus, the following
will cause both bash and polyglot_ps1 to be undeployed together:
.sp
.RS 4
ocd undeploy bash
.RE
.sp
If we do not want polyglot_ps1 to be undeployed with bash, then we can do this
instead:
.sp
.RS 4
ocd undeploy -o bash
.RE
.sp
Root cannot be undeployed, but we can still request that its excluded files be
undeployed like so:
.sp
.RS 4
ocd undeploy -e root
.RE
.SH OCD
Part of the \fBocd\fR(1) command-set.
